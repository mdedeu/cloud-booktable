Index: src/lib/reservation_service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class ReservationService{\n    url;\n    constructor() {\n        this.url = process.env.NEXT_PUBLIC_BACKEND_URL ? process.env.NEXT_PUBLIC_BACKEND_URL +  '/reservation' : 'http://localhost:3000/reservation';\n    }\n\n    async getReservations() {\n        const response = await fetch(this.url);\n        if (!response.ok) {\n            throw new Error('Failed to fetch reservations');\n        }\n        const jsonResponse = await response.json();\n        console.log(jsonResponse);\n        return JSON.parse(jsonResponse.body);\n    }\n\n    async createReservation(reservation) {\n        const response = await fetch(this.url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(reservation)\n        });\n        return await response.json();\n    }\n}\nexport const reservationService = new ReservationService();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lib/reservation_service.ts b/src/lib/reservation_service.ts
--- a/src/lib/reservation_service.ts	(revision 77c62e7346e0027cb0db5fe90f3be8681af2270a)
+++ b/src/lib/reservation_service.ts	(date 1727058729030)
@@ -1,3 +1,5 @@
+import {Reservation} from "@/lib/types";
+
 class ReservationService{
     url;
     constructor() {
@@ -14,7 +16,7 @@
         return JSON.parse(jsonResponse.body);
     }
 
-    async createReservation(reservation) {
+    async createReservation(reservation:Reservation) {
         const response = await fetch(this.url, {
             method: 'POST',
             headers: {
